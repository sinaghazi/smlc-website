import*as THREE from"three";import{OrbitControls}from"three/addons/controls/OrbitControls.js";import{FontLoader}from"three/addons/loaders/FontLoader.js";import{TextGeometry}from"three/addons/geometries/TextGeometry.js";let data;document.addEventListener("DOMContentLoaded",(function(){const e=document.getElementById("xRange"),t=document.getElementById("yRange"),n=document.getElementById("zRange"),o=document.getElementById("descriptionBox"),a=document.getElementById("xLabel"),r=document.getElementById("yLabel"),s=document.getElementById("zLabel"),i=document.querySelectorAll(".selection-btn");let d,c,l,E,m,u="individual";function w(e,t,n,o,a){const r=new TextGeometry(e,{font:t,size:10,depth:1}),s=new THREE.MeshBasicMaterial({color:0}),i=new THREE.Mesh(r,s);return i.position.set(n,o,a),i}function v(){requestAnimationFrame(v),l.render(d,c)}function h(){const o=50*(parseInt(e.value)-3),a=50*(parseInt(t.value)-3),r=50*(parseInt(n.value)-3);m.position.set(o,a,r),p(e.value,t.value,n.value)}function p(e,t,n){if(!data)return void console.error("Data is not loaded yet");const a=data.levels[u],r=a.axes.X,s=a.axes.Y,i=a.axes.Z,d=r.values[e-1],c=s.values[t-1],l=i.values[n-1];var E;o.innerHTML=`\n      <strong>${E=u,E.charAt(0).toUpperCase()+E.slice(1)} Level:</strong>\n      ${d}, ${c}, ${l}.<br>\n      <em>Example:</em> ${a.descriptions.example}\n    `}function R(e){if(!data)return void console.error("Data is not loaded yet");const t=data.levels[e];a.textContent=t.axes.X.label,r.textContent=t.axes.Y.label,s.textContent=t.axes.Z.label}fetch("data/smlc_data.json").then((e=>e.json())).then((o=>{data=o,function(){d=new THREE.Scene;const o=document.getElementById("cube-container").clientWidth,a=document.getElementById("cube-container").clientHeight;c=new THREE.PerspectiveCamera(45,o/a,.1,1e3),c.position.set(300,300,300),c.lookAt(new THREE.Vector3(0,0,0)),l=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),l.setSize(o,a),document.getElementById("cube-container").appendChild(l.domElement);const r=new THREE.BoxGeometry(200,200,200),s=new THREE.EdgesGeometry(r),T=new THREE.LineBasicMaterial({color:3355443});E=new THREE.LineSegments(s,T),E.position.set(0,0,0),d.add(E),function(){const e=150,t=new THREE.LineBasicMaterial({color:0}),n=(new THREE.BufferGeometry).setFromPoints([new THREE.Vector3(0,0,0),new THREE.Vector3(e,0,0)]),o=new THREE.Line(n,t);d.add(o);const a=(new THREE.BufferGeometry).setFromPoints([new THREE.Vector3(0,0,0),new THREE.Vector3(0,e,0)]),r=new THREE.Line(a,t);d.add(r);const s=(new THREE.BufferGeometry).setFromPoints([new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,e)]),i=new THREE.Line(s,t);d.add(i);(new FontLoader).load("https://threejs.org/examples/fonts/helvetiker_regular.typeface.json",(function(t){const n=w("X",t,e+10,0,0),o=w("Y",t,0,e+10,0),a=w("Z",t,0,0,e+10);d.add(n),d.add(o),d.add(a)}))}();const g=new THREE.SphereGeometry(5,32,32),H=new THREE.MeshBasicMaterial({color:16724736});m=new THREE.Mesh(g,H),d.add(m);const f=new THREE.AmbientLight(16777215);d.add(f);const b=new OrbitControls(c,l.domElement);b.enableDamping=!0,b.dampingFactor=.05,e.addEventListener("input",h),t.addEventListener("input",h),n.addEventListener("input",h),i.forEach((o=>{o.addEventListener("click",(function(){i.forEach((e=>{e.classList.remove("active","bg-[#333333]","text-white"),e.classList.add("bg-white","text-[#333333]","border","border-[#333333]")})),this.classList.add("active","bg-[#333333]","text-white"),this.classList.remove("bg-white","text-[#333333]","border","border-[#333333]"),u=this.getAttribute("data-type"),R(u),e.value=3,t.value=3,n.value=3,h(),p(e.value,t.value,n.value)}))})),R(u),v()}(),h()})).catch((e=>{console.error("Error loading JSON data:",e)}))}));